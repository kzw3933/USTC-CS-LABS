
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIFFleftIMPLIESrightAXAFAGEXEFEGleftORleftANDrightNOTA AF AG AND AX E EF EG EX FALSE IFF IMPLIES LBRACKET LPAREN NOT OR RBRACKET RPAREN TRUE U VARexpression : TRUEexpression : FALSEexpression : VARexpression : NOT expressionexpression : expression AND expressionexpression : expression OR expressionexpression : expression IMPLIES expressionexpression : expression IFF expressionexpression : AX expressionexpression : EX expressionexpression : AF expressionexpression : EF expressionexpression : AG expressionexpression : EG expressionexpression : A LBRACKET expression U expression RBRACKETexpression : E LBRACKET expression U expression RBRACKETexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'TRUE':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'FALSE':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'VAR':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NOT':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'AX':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EX':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AF':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'EF':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'AG':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'EG':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'A':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'E':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LPAREN':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,3,4,19,20,21,22,23,24,25,29,30,31,32,35,40,41,],[0,-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,-5,-6,-7,-8,-17,-15,-16,]),'AND':([1,2,3,4,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,38,39,40,41,],[15,-1,-2,-3,-4,15,15,15,15,15,15,15,-5,15,15,15,15,15,-17,15,15,-15,-16,]),'OR':([1,2,3,4,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,38,39,40,41,],[16,-1,-2,-3,-4,16,16,16,16,16,16,16,-5,-6,16,16,16,16,-17,16,16,-15,-16,]),'IMPLIES':([1,2,3,4,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,38,39,40,41,],[17,-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,17,-5,-6,-7,17,17,17,-17,17,17,-15,-16,]),'IFF':([1,2,3,4,19,20,21,22,23,24,25,28,29,30,31,32,33,34,35,38,39,40,41,],[18,-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,18,-5,-6,-7,-8,18,18,-17,18,18,-15,-16,]),'RPAREN':([2,3,4,19,20,21,22,23,24,25,28,29,30,31,32,35,40,41,],[-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,35,-5,-6,-7,-8,-17,-15,-16,]),'U':([2,3,4,19,20,21,22,23,24,25,29,30,31,32,33,34,35,40,41,],[-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,-5,-6,-7,-8,36,37,-17,-15,-16,]),'RBRACKET':([2,3,4,19,20,21,22,23,24,25,29,30,31,32,35,38,39,40,41,],[-1,-2,-3,-4,-9,-10,-11,-12,-13,-14,-5,-6,-7,-8,-17,40,41,-15,-16,]),'LBRACKET':([12,13,],[26,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,6,7,8,9,10,11,14,15,16,17,18,26,27,36,37,],[1,19,20,21,22,23,24,25,28,29,30,31,32,33,34,38,39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> TRUE','expression',1,'p_expression_true','parse.py',55),
  ('expression -> FALSE','expression',1,'p_expression_false','parse.py',59),
  ('expression -> VAR','expression',1,'p_expression_var','parse.py',63),
  ('expression -> NOT expression','expression',2,'p_expression_not','parse.py',67),
  ('expression -> expression AND expression','expression',3,'p_expression_and','parse.py',71),
  ('expression -> expression OR expression','expression',3,'p_expression_or','parse.py',75),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression_implies','parse.py',79),
  ('expression -> expression IFF expression','expression',3,'p_expression_iff','parse.py',83),
  ('expression -> AX expression','expression',2,'p_expression_ax','parse.py',87),
  ('expression -> EX expression','expression',2,'p_expression_ex','parse.py',91),
  ('expression -> AF expression','expression',2,'p_expression_af','parse.py',95),
  ('expression -> EF expression','expression',2,'p_expression_ef','parse.py',99),
  ('expression -> AG expression','expression',2,'p_expression_ag','parse.py',103),
  ('expression -> EG expression','expression',2,'p_expression_eg','parse.py',107),
  ('expression -> A LBRACKET expression U expression RBRACKET','expression',6,'p_expression_au','parse.py',111),
  ('expression -> E LBRACKET expression U expression RBRACKET','expression',6,'p_expression_eu','parse.py',115),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','parse.py',119),
]
