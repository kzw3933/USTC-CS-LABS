#include<stdio.h>
int main(){
putchar('|');
putchar('<');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('>');
putchar('|');
putchar('\n');
putchar('|');
printf("                           Elevator                      ");
putchar('|');
printf("                           Buildings                     ");
putchar('|');
putchar('\n');
putchar('|');
putchar('<');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('-');
putchar('>');
putchar('|');
putchar('\n');
putchar('|');
printf("         States        ");
putchar('|');
printf("        PassStack      ");
putchar('|');
printf("          floor        ");
putchar('|');
printf("        PassQuene      ");
putchar('|');
putchar('\n');

   
    return 1;

}